Go to mysql and make sure you have "pythondb1" database created.

use pythondb1;

drop table employees;

create a table:


CREATE TABLE employees (
    id INT PRIMARY KEY,
    name VARCHAR(100),
    department VARCHAR(50),
    salary DECIMAL(10,2)
);


insert atleast 5 records:


INSERT INTO employees (id, name, department, salary) VALUES
(101, 'Rohit Sharma', 'HR', 45000.00),
(102, 'Sneha Bhatt', 'IT', 60000.00),
(103, 'Ravi Shastri', 'Finance', 52000.00),
(104, 'Anita Raj', 'Marketing', 48000.00),
(105, 'Rahul Dravid', 'IT', 58000.00);


 select * from employees;




create a procedure named GetEmployeeSalary that:

Accepts an IN parameter emp_id

Returns an OUT parameter emp_salary



DELIMITER //

DROP PROCEDURE IF EXISTS GetEmployeeSalary;

CREATE PROCEDURE GetEmployeeSalary(
    IN emp_id INT,
    OUT emp_salary DECIMAL(10,2)
)
BEGIN
    SELECT salary INTO emp_salary
    FROM employees
    WHERE id = emp_id;
END //

DELIMITER ;


You can call above stored procedure from mysql itself with the following syntax:


SET @salary = 0;

CALL GetEmployeeSalary(103, @salary);

SELECT @salary AS 'Employee Salary';





"""

callproc() takes a list of parameters — both IN and OUT.

After execution, that list is returned with OUT params replaced by actual values.

You access the OUT parameter using indexing (e.g., result_args[1]).

"""

Python code:
		create a module:

			Connection_Provider.py



import mysql.connector

def getConnection():
    # Connect to MySQL
    conn = mysql.connector.connect(
        host="localhost",
        user="root",
        password="root",
        database="pythondb1"
    )
    return conn


		create a script:

			First.py


import mysql.connector
from Connection_Provider import *

conn=getConnection()

# Create a cursor
cursor = conn.cursor()


# Prepare the call to stored procedure with IN and OUT parameters
emp_id = 102  # Example ID
salary_out = 0  # Placeholder

# Call the procedure: note that OUT param needs to be passed as a variable
result_args = cursor.callproc('GetEmployeeSalary', [emp_id, salary_out])

# result_args[1] contains the OUT value
print(f"Employee Salary: ₹{result_args[1]}")

# Clean up
cursor.close()
conn.close()


run "First.py" and make sure it works properly.
