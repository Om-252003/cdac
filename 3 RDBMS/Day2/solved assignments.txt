51. Write a query that lists each order number followed by the name of the customer who made that order.
select o.onum, c.cname from orders o join customers c on o.cnum = c.cnum;

52. Write 2 queries that select all salespeople (by name and number) who have customers in their cities who they do not service, one using a join and one a corelated subquery. Which solution is more elegant?
select distinct s.snum, s.sname from salespeople s join customers c on s.city = c.city and s.snum <> c.snum;
select s.snum, s.sname from salespeople s where exists (select 1 from customers c where c.city = s.city and c.snum <> s.snum);

53. Write a query that selects all customers whose ratings are equal to or greater than ANY (in the SQL sense) of Serres’?
select * from customers where rating >= any(select rating from customers c join salespeople s on c.snum = s.snum where s.sname = 'Serres');

54. Write 2 queries that will produce all orders taken on October 3 or October 4.
select * from orders where odate in ('1996-10-03','1996-10-04');
select * from orders where odate = '1996-10-03' or odate = '1996-10-04';

55. Write a query that produces all pairs of orders by a given customer. Name that customer and eliminate duplicates.
select distinct a.onum, b.onum from orders a join orders b on a.cnum = b.cnum and a.onum < b.onum where a.cnum = 2001;

56. Find only those customers whose ratings are higher than every customer in Rome.
select * from customers where rating > all(select rating from customers where city = 'Rome');

57. Write a query on the Customers table whose output will exclude all customers with a rating <= 100.00, unless they are located in Rome.
select * from customers where rating > 100 or city = 'Rome';

58. Find all rows from the Customers table for which the salesperson number is 1001.
select * from customers where snum = 1001;

59. Find the total amount in Orders for each salesperson for whom this total is greater than the amount of the largest order in the table.
select snum, sum(amt) from orders group by snum having sum(amt) > (select max(amt) from orders);

60. Write a query that selects all orders save those with zeroes or NULLs in the amount field.
select * from orders where amt is not null and amt <> 0;

61. Produce all combinations of salespeople and customer names such that the former precedes the latter alphabetically, and the latter has a rating of less than 200.
select s.sname, c.cname from salespeople s, customers c where s.sname < c.cname and c.rating < 200;

62. List all Salespeople’s names and the Commission they have earned.
select sname, comm from salespeople;

63. Write a query that produces the names and cities of all customers with the same rating as Hoffman. Write the query using Hoffman’s CNUM rather than his rating, so that it would still be usable if his rating changed.
select cname, city from customers where rating = (select rating from customers where cnum = 2001);

64. Find all salespeople for whom there are customers that follow them in alphabetical order.
select distinct s.sname from salespeople s join customers c on c.cname > s.sname;

65. Write a query that produces the names and ratings of all customers of all who have above average orders.
select distinct c.cname, c.rating from customers c join orders o on c.cnum = o.cnum where o.amt > (select avg(amt) from orders);

66. Find the SUM of all purchases from the Orders table.
select sum(amt) from orders;

67. Write a SELECT command that produces the order number, amount and date for all rows in the order table.
select onum, amt, odate from orders;

68. Count the number of nonNULL rating fields in the Customers table (including repeats).
select count(rating) from customers;

69. Write a query that gives the names of both the salesperson and the customer for each order after the order number.
select o.onum, s.sname, c.cname from orders o join salespeople s on o.snum = s.snum join customers c on o.cnum = c.cnum;

70. List the commissions of all salespeople servicing customers in London.
select distinct s.comm from salespeople s join customers c on s.snum = c.snum where c.city = 'London';

71. Write a query using ANY or ALL that will find all salespeople who have no customers located in their city.
select * from salespeople s where s.snum <> all(select c.snum from customers c where c.city = s.city);

72. Write a query using the EXISTS operator that selects all salespeople with customers located in their cities who are not assigned to them.
select * from salespeople s where exists (select 1 from customers c where c.city = s.city and c.snum <> s.snum);

73. Write a query that selects all customers serviced by Peel or Motika.
select * from customers where snum in (select snum from salespeople where sname in ('Peel','Motika'));

74. Count the number of salespeople registering orders for each day. (If a salesperson has more than one order on a given day, he or she should be counted only once.)
select odate, count(distinct snum) from orders group by odate;

75. Find all orders attributed to salespeople in London.
select * from orders where snum in (select snum from salespeople where city = 'London');

76. Find all orders by customers not located in the same cities as their salespeople.
select * from orders o join customers c on o.cnum = c.cnum join salespeople s on o.snum = s.snum where c.city <> s.city;

77. Find all salespeople who have customers with more than one current order.
select distinct s.sname from salespeople s join customers c on s.snum = c.snum join orders o on c.cnum = o.cnum group by s.sname, c.cnum having count(o.onum) > 1;

78. Write a query that extracts from the Customers table every customer assigned to a salesperson who currently has at least one other customer (besides the customer being selected) with orders in the Orders table.
select * from customers c1 where exists (select 1 from customers c2 join orders o on c2.cnum = o.cnum where c2.snum = c1.snum and c2.cnum <> c1.cnum);

79. Write a query that selects all customers whose names begin with ‘C’.
select * from customers where cname like 'C%';

80. Write a query on the Customers table that will find the highest rating in each city. Put the output in this form : for the city (city) the highest rating is : (rating).
select concat('for the city ', city, ' the highest rating is : ', max(rating)) as result from customers group by city;

81. Write a query that will produce the SNUM values of all salespeople with orders currently in the Orders table (without any repeats).
select distinct snum from orders;

82. Write a query that lists customers in descending order of rating. Output the rating field first, followed by the customer’s names and numbers.
select rating, cname, cnum from customers order by rating desc;

83. Find the average commission for salespeople in London.
select avg(comm) from salespeople where city = 'London';

84. Find all orders credited to the same salesperson who services Hoffman (CNUM 2001).
select * from orders where snum = (select snum from customers where cnum = 2001);

85. Find all salespeople whose commission is in between 0.10 and 0.12 (both inclusive).
select * from salespeople where comm between 0.10 and 0.12;

86. Write a query that will give you the names and cities of all salespeople in London with a commission above 0.10.
select sname, city from salespeople where city = 'London' and comm > 0.10;

87. What will be the output from the following query?
-- it will select orders with amt < 1000 or orders that do not have date 1996-10-03 and cnum>2003
select * from orders where (amt < 1000 or not (odate = '1996-10-03' and cnum > 2003));

88. Write a query that selects each customer’s smallest order.
select cnum, min(amt) from orders group by cnum;

89. Write a query that selects the first customer in alphabetical order whose name begins with G.
select * from customers where cname like 'G%' order by cname asc limit 1;

90. Write a query that counts the number of different nonNULL city values in the Customers table.
select count(distinct city) from customers where city is not null;

91. Find the average amount from the Orders table.
select avg(amt) from orders;

92. What would be the output from the following query?
-- selects orders that are not dated 1996-10-03 and snum not greater than 1006 and amt >=1500
select * from orders where not (odate = '1996-10-03' or snum > 1006) and amt >= 1500;

93. Find all customers who are not located in San Jose and whose rating is above 200.
select * from customers where city <> 'San Jose' and rating > 200;

94. Give a simpler way to write this query :
-- select snum, sname, city, comm from salespeople where comm not between 0.12 and 0.14
select snum, sname, city, comm from salespeople where comm < 0.12 or comm > 0.14;

95. Evaluate the following query :
-- selects orders not having (odate=1996-10-03 and snum>1002) and also not amt>2000
select * from orders where not ((odate = '1996-10-03' and snum > 1002) or amt > 2000);

96. Which salespersons attend to customers not in the city they have been assigned to?
select distinct s.sname from salespeople s join customers c on s.snum = c.snum where s.city <> c.city;

97. Which salespeople get commission greater than 0.11 are serving customers rated less than 250?
select distinct s.sname from salespeople s join customers c on s.snum = c.snum where s.comm > 0.11 and c.rating < 250;

98. Which salespeople have been assigned to the same city but get different commission percentages?
select distinct a.sname, b.sname from salespeople a join salespeople b on a.city = b.city and a.comm <> b.comm and a.snum < b.snum;

99. Which salesperson has earned the most by way of commission?
select s.sname from salespeople s join orders o on s.snum = o.snum group by s.snum, s.sname order by sum(o.amt * s.comm) desc limit 1;

100. Does the customer who has placed the maximum number of orders have the maximum rating?
-- just checking logic
select c.cname from customers c where c.cnum = (select cnum from orders group by cnum order by count(*) desc limit 1);
select max(rating) from customers;

101. Has the customer who has spent the largest amount of money been given the highest rating?
select c.cname from customers c where c.cnum = (select cnum from orders group by cnum order by sum(amt) desc limit 1);
select max(rating) from customers;

102. List all customers in descending order of customer rating.
select * from customers order by rating desc;

103. On which days has Hoffman placed orders?
select distinct odate from orders where cnum = (select cnum from customers where cname = 'Hoffman');

104. Do all salespeople have different commissions?
select count(distinct comm) = count(*) from salespeople;

105. Which salespeople have no orders between 10/03/1996 and 10/05/1996?
select * from salespeople where snum not in (select distinct snum from orders where odate between '1996-10-03' and '1996-10-05');

106. How many salespersons have succeeded in getting orders?
select count(distinct snum) from orders;

107. How many customers have placed orders?
select count(distinct cnum) from orders;

108. On which date has each salesperson booked an order of maximum value?
select s.snum, max(o.amt), o.odate from orders o join salespeople s on o.snum = s.snum group by s.snum, o.odate having max(o.amt);

109. Who is the most successful salesperson?
select s.sname from salespeople s join orders o on s.snum = o.snum group by s.sname order by sum(o.amt) desc limit 1;

110. Who is the worst customer with respect to the company?
select c.cname from customers c join orders o on c.cnum = o.cnum group by c.cname order by sum(o.amt) asc limit 1;

111. Are all customers not having placed orders greater than 200 totally been serviced by salespersons Peel or Serres?
select * from customers where rating <=200 and snum not in (select snum from salespeople where sname in ('Peel','Serres'));

112. Which customers have the same rating?
select c1.cname, c2.cname, c1.rating from customers c1 join customers c2 on c1.rating = c2.rating and c1.cnum < c2.cnum;

113. Find all orders greater than the average for October 4th.
select * from orders where amt > (select avg(amt) from orders where odate = '1996-10-04');

114. Which customers have above average orders?
select distinct c.cname from customers c join orders o on c.cnum = o.cnum where o.amt > (select avg(amt) from orders);

115. List all customers with ratings above San Jose’s average.
select * from customers where rating > (select avg(rating) from customers where city = 'San Jose');

116. Select the total amount in orders for each salesperson for whom the total is greater than the amount of the largest order in the table.
select snum, sum(amt) from orders group by snum having sum(amt) > (select max(amt) from orders);

117. Give names and numbers of all salespersons who have more than one customer.
select s.snum, s.sname from salespeople s join customers c on s.snum = c.snum group by s.snum, s.sname having count(c.cnum) > 1;

118. Select all salespersons by name and number who have customers in their city whom they don’t service.
select distinct s.snum, s.sname from salespeople s join customers c on s.city = c.city and s.snum <> c.snum;

119. Which customers’ rating should be lowered?
select * from customers where rating > (select avg(rating) from customers);

120. Is there a case for assigning a salesperson to Berlin?
select * from customers where city = 'Berlin';

121. Is there any evidence linking the performance of a salesperson to the commission that he or she is being paid?
select s.sname, s.comm, sum(o.amt) as total_sales from salespeople s join orders o on s.snum = o.snum group by s.sname, s.comm order by s.comm;

122. Does the total amount in orders by customer in Rome and London exceed the commission paid to salespersons in London and New York by more than 5 times?
select sum(o.amt) > 5 * (select sum(o.amt * s.comm) from orders o join salespeople s on o.snum = s.snum where s.city in ('London','New York')) from orders o join customers c on o.cnum = c.cnum where c.city in ('Rome','London');

123. Which is the date, order number, amt and city for each salesperson (by name) for the maximum order he has obtained?
select s.sname, o.odate, o.onum, o.amt, s.city from orders o join salespeople s on o.snum = s.snum where o.amt = (select max(amt) from orders where snum = s.snum);

124. Which salesperson(s) should be fired?
select s.sname from salespeople s where s.snum not in (select distinct snum from orders);

125. What is the total income for the company?
select sum(o.amt * s.comm) from orders o join salespeople s on o.snum = s.snum;
