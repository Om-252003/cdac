"""

hue='Batch' tells Seaborn to draw separate lines with
different colors based on the values in the Batch column.

So:

For rows where Batch = DAC, one color (say green) is used.

For rows where Batch = DBDA, another color (say orange)
is used.

Without hue, both batches would be drawn as a
single line, making it impossible to
distinguish DAC vs DBDA.


hue='Batch' says: "Draw separate lines for
each value of Batch (DAC, DBDA)."

palette='Set2' tells Seaborn: "Pick a predefined
color scheme called Set2 from Matplotlib/Seabornâ€™s
built-in palettes."

Seaborn then automatically assigns one color from
Set2 to DAC and another to DBDA.

how can we specify colors explicitly for "hue" ?

palette={'DAC': 'pink', 'DBDA': 'red'}

"""


import seaborn as sns
import pandas as pd
import matplotlib.pyplot as py
import numpy as np

# Data
years = np.arange(2016, 2022)
dac_batch = [100, 110, 120, 115, 118, 120]
dbda_batch = [38, 45, 48, 50, 55, 60]

# Convert to long-form DataFrame for seaborn
df = pd.DataFrame({
    'Year': list(years) * 2,
    'Students': dac_batch + dbda_batch,
    'Batch': ['DAC'] * len(dac_batch) + ['DBDA'] * len(dbda_batch)
})

# Seaborn style
sns.set(style="whitegrid")  # Try also: "darkgrid", "ticks", etc.

# Plot
py.figure(figsize=(9, 5))
sns.lineplot(data=df, x='Year', y='Students', hue='Batch', style='Batch',
             markers=True, dashes=True, palette='Set2')
#sns.lineplot(data=df, x='Year', y='Students', hue='Batch', style='Batch',
#             markers=True, dashes=True,
#             palette={'DAC': 'pink', 'DBDA': 'red'})
# Labels and title
py.title("VITA DAC_DBDA Batch Summary for Last 5 Years", fontsize=14)
py.xlabel("Year")
py.ylabel("Number of Students")
py.tight_layout()
py.show()
